                                             
#Тестовое задание.
 
Разработать простую систему:
 
Страничка добавления/просмотра студентов (html)
    Работает на ajax, никакие действия не должны вести к перезагрузке страницы.
    Использовать jQuery и/или просто JS.
    Данные для ввода через форму: имя, фамилия, учебная группа, дата рождения, email.
    Просмотр списка студентов предполагает вывод вышеописанных данных + ip адрес регистрации, время регистрации, список предметов и оценок по ним, средний балл по всем предметам (одно число, 2 знака после запятой), номер семестра, характеристика научного руководителя.
 
    Всегда выводить 10 студентов с наивысшим средним баллом.
 
Необходимую(ые) таблицу(ы) спроектировать самостоятельно, учитывая условия:
    Студентов будет много (порядка 1-2 млн)
    Запись в эти таблицы будет вестись в конкурентом режиме доступа
    Студенты могут часто переходить из одной группы в другую
    Предполагаются частые выборки по фильтрам (включая комбинации): фамилия, группа, семестр, средний балл
 
Написать следующие выборки для поиска в базе данных и интерфейсы для их просмотра:
    - однокурсников со средним баллом от .. до .. и именем %name%
    - всех людей, c IP которых произошло более одной регистрации, и при этом хотя бы у одного из них должна быть написана характеристика научного руководителя
 
Оформлением html страницы можно пренебречь.
 
Язык реализации - на усмотрение.
 
База данных: MySQL или PostgreSQL
 
Необходимо прислать: код системы, простенькую инструкцию для запуска, SQL схему базы данных, код описанных выше поисковых выборок.


#Запуск

##Подготовка БД:
Открыть консоль mysql под root-доступом
Выполнить:

    CREATE USER 'sm'@'localhost';
    CREATE DATABASE sm_development;
    GRANT ALL PRIVILEGES ON sm_development.* TO 'sm'@'localhost';


##Настройка среды Rails


    bundle install
    rake db:migrate


##Для сидирования тестовыми данными выполнить

    rake db:populate

##Для повторного сидирования:

    rake db:repopulate

##Интерфейсы для запросов:
Однокурсники со средним баллом от .. до .. и именем %name% :
    Student.all.sample.specific_classmates(name, min_score, max_score) 

Студенты, зарегистрированные с одинаковых IP, имеющие отзыв науч. руководителя
    Student.registered_in_special_way
    
